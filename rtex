#!/usr/bin/env python
import sys
from getopt import getopt, GetoptError
from os import getcwd, listdir, remove
from os.path import expanduser, join
from shutil import copyfile
from subprocess import call


def usage():
    print("-h --help\tShow a useful help menu")
    print("-l --log\tSpare log files during cleanup")


if __name__ == "__main__":
    make = ["make"]

    try:
        opts, args = getopt(sys.argv[1:], "hlf:", ["help", "log"])
    except GetoptError:
        usage()
        sys.exit(2)

    for opt, arg in opts:
        if opt in ("-h", "--help"):
            usage()
            sys.exit()
        if opt in ("-f", "--file"):
            if opt in ("-s", "--simple"):
                make.append("pdf")
            make.append("F=" + arg)
        if opt in ("-l", "--log"):
            make.append("LOG=true")

    cwd = getcwd()
    src = join(expanduser("~"), ".re1", "templates", "tex")

    copyfile(join(src, "makefile"), join(cwd, "makefile"))
    copyfile(join(src, ".lst.tex"), join(cwd, ".lst.tex"))

    files = [join(cwd, f) for f in listdir(cwd) if join(cwd, f).endswith(".tex")]
    templates = ["school", "science"]
    found = []

    for name in files:
        with open(name) as f:
            for line in f:
                if "\documentclass" in line:
                    for t in templates:
                        if "{%s}" % t in line:
                            found.append(t)
                            templates.remove(t)
                    break
        if not templates:
            break

    for t in found:
        copyfile(join(src, t, f"{t}.cls"), join(cwd, f"{t}.cls"))

    # Call GNU Make in the current directory
    call(tuple(make))

    # Clean up
    tmp = [join(cwd, ".lst.tex"),
           join(cwd, "makefile"),
           join(cwd, "school.cls"),
           join(cwd, "science.cls")]

    for f in tmp:
        try:
            remove(f)
        except OSError:
            pass
